#lang racket
(defun AtBase? (lambda (x) (<= x 1)))
(defun BaseCase (lambda () 1))
(defun Combine (lambda (x recursion-result) (* x recursion-result)))
(defun Decomp (lambda (x) (- x 1)))
     
(defun fn (lambda (x)
  (if (AtBase? x)
      (BaseCase)
      (Combine x (fn (Decomp x)))
      )))
