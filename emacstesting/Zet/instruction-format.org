#+STARTUP: showall indent highstars

* Форматы команд 16 и 32 бит                       :instructions:16bit:32bit:

** Вступительная инфа                              :instructions:16bit:32bit:
-Команды, выполняющие обращение к памяти, имеют аттрибут размера
 адреса. Он соответсвует сколько бит адресного смещения необходимо
 сгенерировать, 16 бит или 32 бита.
-Команды, также, могут обращаться к операндам. Команды, обращающиеся к
 словам (16 бит) имеет 16битный размер аттрибута размера
 операнда. Обращающиеся к двойным словам (32 бита) имеют соответсвенный
 размер аттрибута размера операнда.
-Аттрибуты размера апперанда полностью определяются размером аттрибута
 по-умолчанию, префиксом команды и битами спецификации размера

** Аттрибуты по-умолчанию      :instructions:attributes:default:16bit:32bit:
-Бит D, имея значение ноль, говорит о том, что размер адреса или операнда
 по-умолчанию равен 16 бит. Иначе, бит Д имеет значение 1 и размер адреса
 и операнда по-умолчанию 32 бита.
-Программы, выполняемые в режиме реальной адресации/режиме V86
 (виртуальной) всегда имеют значение по-умолчанию 16бит.

** Префиксы размера операнда и размера адреса :instructions:prefixes:16bit:32bit:
-Внутренняя кодировка команды может также включать два бита - два
 префикса. Префикс размера операнда (67h) и префикс размера адреса
 (66h).
-С учетом их наличия/отсутствия и значения аттрибутов по-умолчанию можно
 судить об эффективных размерах операнда/адреса.

-|D|66h|67h|Эффективный размер адреса|Эффективный размер операнда|
-|0| - | - |            16           |             16            |
-|0| - | + |            16           |             32            |
-|0| + | - |            32           |             16            |
-|0| + | + |            32           |             32            |
-|1| - | - |            32           |             32            |
-|1| - | + |            32           |             16            |
-|1| + | - |            16           |             32            |
-|1| + | + |            16           |             16            |

** Атрибут размера адреса для стека :instructions:attributes:stack:16bit:32bit:
-Команды, которые используют стек неявно (например: pop eax), также имеют
 атрибут размера адреса стека 16 или 32 бит.
-16битные команды используют регистр указателя стека %sp, 32битные %esp,
 64битные %rsp (просто упомянул, так как тут лишь 32)
-Атрибут размера адреса стека управляется битом B дескриптора сегмента
 данных регистра SS. Нулевое значение бита B, задает 16-битный атрибут
 размера адреса стека, единичное значение — 32-битный.

** Базовый формат команд                                      :instructions:

-|Префикс команды|Префикс адреса|Префикс размера операнда|Префикс замещения сегмента|Код операции |   MODR/M   |     SIB    |    Смещение    |Непосредственное значение|
-|  0 или 1 байт | 0 или 1 байт |      0 или 1 байт      |       0 или 1  байт      |1 или 2 байта|0 или 1 Байт|0 или 1 Байт|0/1/2/3/4 байта |    0/1/2/3/4 байта    |

-Префикс команды необязательно присутствуют, а также могут присутствовать
 в произвольном порядке
-1/2 байтный код операции
-Спецификатор адреса, состоящий из байта режима адресации MODR/M и байта
 масштабируемого индекса SIB (Scale index Base), также необязательно
 присутствуют
-Смещение, если необходимо
-Поля непосредственного значения, если такое присутстсвует
-В коде операции, могут быть определены более мелкие поля: Направление
 операции, размер смещения, коды регистров и знак расширения. Поля
 варьируются в зависимости от класса операции.
-Для каждой группы префиксов может быть зарезервировано не более 1 байта
-Группы префиксов: команд, замещения сегмента, замещения размера операнда
 и замещения размера адреса
-В каждой группе может быть использован лишь 1 префикс (или быть
 неиспользован вообще)

** ModR/M и SIB                                     :instructions:modrm:SIB:
-Следует за байтом кода операции
-Определяет используемую форму(режим) адресации
-Также, кодирование модр/м байта определенным образом может говорить о
том, что  ожидается также байт SIB после него
-SIB необходим для полного описания формы адресации
-Затем, за этим(и) двумя участками может идти 8/16/32битное смещение
-В mod/SIB содержутся: Тип индексации или номер регистра, используемые в
команде; Используемый регистр или дополнительная информация о коде
операции; Информация о базе, индексе и масштабе.
-Поля:
-ModR/M
-[MOD][REG/opcode][R/M]
-Поле MOD содержит два наиболее значимых бита (7 и 6, если считать с 0) и
-в комбинации с полем r/m определяет 32 возможных типа адресации (8
регистровых и 24 индексных)
-поле reg содержит следующие за полем поле reg содержит следующие за
-полем mod три бита (5, 4 и 3 биты) и определяет либо номер регистра,
либо три дополнительных бита кода операци
-поле r/m содержит три последних значащих бита байта ModR/M (2, 1 и 0
биты) и может определять номер регистра, в котором находится операнд,
или представлять совместно с полем mod 32 возможных режима адресации

-Некоторые формы адресации, например, 32-хбитные базовые, требуют наличия
SIB байта. Определенная кодировка модрм байта сигнализирует о наличии СИБ
байта. Байт СИБ состоит из следующих полей:

-[SS][INDEX][BASE]
-поле ss , занимающее два наиболее значимых бита (7 и 6 биты), определяет
масштабный множитель
-поле index , занимающее следующие три бита за полем ss (5, 4, и 3 биты),
определяет номер индексного регистра
-поле base , занимающее оставшиеся три бита (2, 1 и 0 биты), определяет
номер базового регистра
